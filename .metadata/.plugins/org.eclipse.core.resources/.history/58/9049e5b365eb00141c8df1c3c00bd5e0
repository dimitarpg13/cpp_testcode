//============================================================================
// Name        : BoostMetaProgrammingPart2.cpp
// Author      : Dimitar Gueorguiev
// Version     :
// Copyright   : Your copyright notice
// Description : Hello World in C++, Ansi-style
//============================================================================

#include <iostream>
#include <boost/mpl/vector.hpp>
#include <boost/mpl/int.hpp>
#include <boost/mpl/vector_c.hpp>

using namespace std;

namespace mpl = boost::mpl;
static int const five = mpl::int_<5>::value;

typedef mpl::vector<
		mpl::int_<1>, mpl::int_<0>, mpl::int_<0>, mpl::int_<0>,
        mpl::int_<0>, mpl::int_<0>, mpl::int_<0> > mass;

typedef mpl::vector<
		mpl::int_<0>, mpl::int_<1>, mpl::int_<0>, mpl::int_<0>,
		mpl::int_<0>, mpl::int_<0>, mpl::int_<0> > length;

typedef mpl::vector_c<int,1,0,0,0,0,0,0> mass; //using integral sequence wrappers
typedef mpl::vector_c<int,0,1,0,0,0,0,0> length;
typedef mpl::vector_c<int,0,0,1,0,0,0,0> time;



int main() {
	cout << "Boost : Template Metaprogramming Part 2" << endl; // prints Boost : Template Metaprogramming Part 2
    cout << "Print five: " << five << endl;
	return 0;
}
