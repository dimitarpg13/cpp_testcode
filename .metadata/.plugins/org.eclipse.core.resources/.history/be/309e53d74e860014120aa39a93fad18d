//============================================================================
// Name        : typeIdExample.cpp
// Author      : Dimitar Gueorguiev
// Version     :
// Copyright   : Your copyright notice
// Description : Hello World in C++, Ansi-style
//============================================================================

#include <iostream>
#include <string>
#include <typeinfo>

using namespace std;

struct Base {}; // non-polymorphic
struct Derived : Base {};

struct Base2 {}; // polymorphic
struct Derived2 : Base2 {};

int main() {
	cout << "typeid usage example" << endl; // prints typeid usage example
	int myint = 50;
	string mystr = "string";
	double *mydoubleptr = nullptr;

	cout << "myint has type: " << typeid(myint).name() << '\n'
		 << "mystr has type: " << typeid(mystr).name() << '\n'
		 << "mydoubleptr has type: " << typeid(mydoubleptr).name() << '\n';

	// std::cout << is a glvalue expression of polymorphic type ; it is evaluated
	const type_info& r1 = typeid(cout << myint);
	cout << "std::cout << myint has type : " << r1.name() << '\n';


	return 0;
}
