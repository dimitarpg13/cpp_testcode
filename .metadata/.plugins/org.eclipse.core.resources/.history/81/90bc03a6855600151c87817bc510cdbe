/*
 * Solver.h
 *
 *  Created on: Sep 6, 2015
 *      Author: Dimitar Gueorguiev
 */

#ifndef SOLVER_H_
#define SOLVER_H_

#include <vector>
#include <map>
#include <list>

#include "Sudoku.h"

using namespace std;

namespace sudoku
{

class Solver
{
protected:
	Puzzle * m_pSrc;
	Puzzle * m_pSol;




public:
    HorizLine ** const getRows() { return m_pSol->getRows(); }
    VertLine ** const getCols() { return m_pSol->getCols(); }
    Region ** const getRegions() { return m_pSol->getRegions(); }


    Solver(Puzzle * puzzle) : m_pSrc(puzzle)
    {

    }

    bool solve()
    {
    	return false;
    }


};


//
//
//
class BTSolver : public Solver
{
public:

private:

	// the key is the number of choices for value available for the current candidate
	//
	map<unsigned short,list<pair<Symbol*,list<char> > > > m_mRankedCandidates;
};

}


#endif /* SOLVER_H_ */
